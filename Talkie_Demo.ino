/* Talkie library  Copyright 2011 Peter Knight
   Talkie is a speech synthesiser that works from a fixed vocabulary.

   Demo put together by Gadget Reboot

   Original library:  https://github.com/going-digital/Talkie/tree/master/Talkie
   Updated library:   https://github.com/ArminJo/Talkie

   Voice PWM output pins for different ATmegas:
    ATmega328 (Uno and Nano): non inverted at pin 3, inverted at pin 11.
    ATmega2560: non inverted at pin 6, inverted at pin 7.
    ATmega32U4 (Leonardo): non inverted at pin 10, inverted at pin 9.
    ATmega32U4 (CircuitPlaygound): only non inverted at pin 5.

   Connect speaker between pin 3 and pin 11

   Compiled for Uno, using Arduino IDE 1.8.10, Talkie (ArminJo) v1.0.2
   Sketch uses 8202 bytes (25%) of program storage space. Maximum is 32256 bytes.
   Global variables use 145 bytes (7%) of dynamic memory, leaving 1903 bytes for local variables. Maximum is 2048 bytes.


*/
#include <Arduino.h>

#include "Talkie.h"
#include "Vocab_US_Large.h"
#include "Vocab_US_Clock.h"
#include "Vocab_US_Acorn.h"

Talkie voice;

// custom generated samples
const uint8_t sample1[]     PROGMEM = {0x00, 0xa0, 0xfc, 0xd4, 0xca, 0x2d, 0xa2, 0x4c, 0x89, 0xe3, 0x28, 0xf7, 0xca, 0xb1, 0x25, 0x0b, 0xcb, 0x53, 0xbb, 0xc2, 0xa4, 0x3c, 0x1c, 0x77, 0x1f, 0x2f, 0x12, 0x72, 0x77, 0xdc, 0xa2, 0x3d, 0xb4, 0xcb, 0xf5, 0x4c, 0xb3, 0xf4, 0x0a, 0x26, 0xe1, 0x2b, 0xd4, 0xc7, 0x2b, 0x18, 0x57, 0xd6, 0x11, 0x6c, 0x6b, 0x69, 0x4c, 0x35, 0x12, 0xa9, 0x22, 0xb1, 0x51, 0xfc, 0x63, 0xd2, 0x74, 0x27, 0x42, 0x56, 0x8f, 0xa5, 0xab, 0x12, 0x33, 0x5d, 0x7c, 0x37, 0xf7, 0x9d, 0xc4, 0x14, 0xf1, 0x6a, 0x8d, 0xb6, 0x34, 0x83, 0xc5, 0xef, 0x76, 0xd9, 0xda, 0x0c, 0x16, 0xbf, 0xd2, 0x6d, 0x62, 0x13, 0x58, 0xfc, 0x2a, 0xd7, 0xa9, 0x8d, 0x50, 0xf1, 0x82, 0x2b, 0x77, 0x16, 0xc3, 0xbd, 0x6d, 0xae, 0x8d, 0x44, 0x45, 0xaf, 0x71, 0xc9, 0xca, 0x1d, 0x35, 0x33, 0x19, 0xd7, 0x2e, 0x9b, 0x54, 0xae, 0xe4, 0xca, 0xaa, 0xbc, 0x46, 0xca, 0x63, 0x2e, 0xcf, 0xcc, 0x8a, 0xae, 0x8c, 0xb9, 0xc2, 0x23, 0x47, 0xab, 0x22, 0xa6, 0x8a, 0x88, 0x2c, 0x2d, 0xba, 0x1c, 0xca, 0xc2, 0xab, 0x34, 0xf3, 0x53, 0x6e, 0xed, 0xae, 0x30};
const uint8_t sample2[]     PROGMEM = {0x00, 0x00, 0xac, 0x1e, 0x9c, 0xd4, 0xd4, 0xec, 0x34, 0x60, 0x7b, 0x96, 0x14, 0x27, 0xad, 0x5e, 0x5b, 0x96, 0x5b, 0x54, 0x1c, 0x7b, 0x4e, 0x47, 0x69, 0x41, 0x09, 0x52, 0x31, 0x15, 0xb5, 0x78, 0x29, 0xea, 0xe4, 0xa6, 0xd5, 0xe4, 0xc6, 0x68, 0x13, 0xa7, 0x54, 0x83, 0x97, 0x02, 0x77, 0x9c, 0xca, 0x11, 0x51, 0x72, 0x52, 0xd6, 0x4c, 0xc5, 0x64, 0x93, 0xba, 0x47, 0x44, 0x88, 0x06, 0x9c, 0xb2, 0xd2, 0x80, 0x93, 0x9b, 0x93, 0x9b, 0x84, 0x59, 0x75, 0x95, 0x4a, 0x5e, 0x32, 0xe2, 0x59, 0x15, 0xd6, 0xf9, 0x9d, 0x8a, 0x6b, 0x47, 0x4d, 0x96, 0x74, 0x69, 0x4a, 0x95, 0xb3, 0x1c, 0xb0, 0x1c, 0x5b, 0x01, 0x76, 0x4b, 0x37, 0xc0, 0xc9, 0x6a, 0x02, 0x58, 0xde, 0x0c, 0x65, 0x86, 0x67, 0x9b, 0x7b, 0x6c, 0x92, 0xd3, 0x98, 0xa6, 0x65, 0xb6, 0x49, 0xc9, 0x8a, 0x8b, 0xa7, 0x5b, 0x16, 0xb9, 0xaa, 0x22, 0x91, 0xee, 0xc4, 0xa5, 0x31, 0xe1, 0x98, 0x65, 0xe5, 0x14, 0xd4, 0x0a, 0xe9, 0x91, 0x55, 0x82, 0x9b, 0x2c, 0xf9, 0x64, 0x84, 0x0e, 0x4e, 0x66, 0x26, 0xb5, 0x16, 0x39, 0x78, 0xc5, 0x92, 0x6c, 0x7a, 0x69, 0x15, 0x47, 0x2d, 0xbe, 0x21, 0xa1, 0x59, 0x6e, 0x14, 0xc7, 0x19, 0x87, 0x65, 0x85, 0x34, 0xee, 0x15, 0x12, 0x31, 0xe4, 0xde, 0x6b, 0x64, 0xf9, 0xa8, 0x94, 0x47, 0xab, 0xea, 0xad, 0xa3, 0x5c, 0xe9, 0x83, 0x7a, 0xb6, 0x0d, 0x56, 0xb5, 0x88, 0x11, 0x59, 0x5a, 0x58, 0x34, 0x2c, 0x5b, 0x66, 0x6a, 0x28, 0xd1, 0x04, 0x47, 0x9e, 0x99, 0x95, 0x48, 0x13, 0x0c, 0x5b, 0x55, 0x26, 0x2e, 0xc0, 0xd1, 0xe1, 0x09, 0xd8, 0x66, 0x43, 0x01, 0x5b, 0xb7, 0x0b, 0x60, 0xe9, 0x36, 0x15, 0x55, 0x25, 0xea, 0x1d, 0xa5, 0x43, 0x9a, 0x95, 0x68, 0x4e, 0x15, 0x0e, 0x59, 0x54, 0x9c, 0xd5, 0x1d, 0x2c, 0xe4, 0xd1, 0x70, 0xe5, 0xb4, 0x59, 0x93, 0x07, 0x2d, 0x11, 0xd9, 0x41, 0x44, 0x5e, 0xa1, 0x99, 0x55, 0xc7, 0x0a, 0xc0, 0x15, 0xac, 0x01, 0xf8, 0xd9, 0x24, 0x00, 0x7f, 0xb4, 0x28, 0xe0, 0x27, 0x15, 0x03, 0x2c, 0xbf, 0xd1, 0x80, 0x15, 0xc6, 0x07, 0xb0, 0xc2, 0x54, 0x82, 0x46, 0x98, 0xf4, 0x70, 0xbb, 0xc1, 0xab, 0xa5, 0x55, 0xcd, 0x93, 0x24, 0x37, 0x66, 0xee, 0x56, 0x8f, 0x99, 0x9c, 0x58, 0x79, 0x3d, 0x53, 0x4a, 0x72, 0x63, 0x93, 0xf5, 0x4a, 0xc6, 0xc9, 0x4f, 0x4d, 0xd6, 0xda, 0x14, 0xa7, 0x38, 0x36, 0x1d, 0x1f, 0x93, 0x13, 0xd2, 0xd8, 0x65, 0x22, 0x5c, 0xaa, 0xcb, 0x62, 0x95, 0x36, 0x0f, 0xa3, 0x2c, 0x8b, 0x59, 0xca, 0xcd, 0x85, 0x92, 0x2c, 0x46, 0x49, 0x37, 0x33, 0x8d, 0xd2, 0x14, 0x5c, 0xdd, 0xdd, 0x52, 0x00, 0xae, 0x76, 0x6f, 0xc0, 0xb5, 0x61, 0x0e, 0xb8, 0x26, 0x9c, 0x9c, 0x93, 0xb9, 0xd9, 0x66, 0x2d, 0xe5, 0x15, 0x6e, 0x56, 0xed, 0x86, 0x43, 0x9c, 0xb9, 0x59, 0x8e, 0x05, 0x49, 0x69, 0x35, 0x6c, 0x96, 0x15, 0x38, 0xa5, 0xd5, 0xb2, 0x69, 0x56, 0x10, 0x97, 0x46, 0x45, 0xe5, 0xe1, 0x56, 0x53, 0x92, 0x8d, 0xb9, 0x45, 0x86, 0x2e, 0x71, 0x76, 0xee, 0xda, 0x11, 0xb6, 0xc4, 0xc9, 0x46, 0x68, 0x5b, 0xd8, 0x10, 0x47, 0xeb, 0xc1, 0xa9, 0x55, 0x5d, 0x1c, 0xad, 0x96, 0x5a, 0xc4, 0x4d, 0x51, 0x4a, 0x96, 0xda, 0x5a, 0xab, 0x44, 0xb1, 0x6a, 0x7b, 0x78, 0xed, 0x14, 0xc5, 0xc1, 0x15, 0x9e, 0x53, 0x42, 0x94, 0x36, 0x76, 0x78, 0x4d, 0x49, 0x51, 0x1a, 0x98, 0x65, 0x3e, 0x3b, 0xc4, 0xb9, 0x42, 0x56, 0x5a, 0x63, 0x95, 0xc5, 0x84, 0x51, 0xa6, 0x91, 0x45, 0x1e, 0x02, 0x5a, 0xa7, 0xc4, 0x0a, 0x45, 0xd5, 0x2e, 0x94, 0x9e, 0xd4, 0x14, 0xde, 0x86, 0x6a, 0x6a, 0x12, 0x95, 0xcb, 0x1c, 0xaa, 0x61, 0x89, 0x43, 0x1c, 0x02, 0x47, 0x58, 0x44, 0x29, 0x5e, 0xb1, 0x14, 0x1d, 0x6e, 0x25, 0x39, 0x59, 0x51, 0x4f, 0xa8, 0xbc, 0x64, 0x46, 0xee, 0xd5, 0x46, 0x49, 0x82, 0x19, 0xb8, 0x75, 0x0b, 0x35, 0x76, 0x8e, 0x76, 0x59, 0xa1, 0x1e, 0x25, 0xf8, 0x21, 0x98, 0x7b, 0xb8, 0x95, 0x10, 0x85, 0xec, 0x16, 0xa5, 0x56, 0x42, 0x1a, 0xba, 0x8b, 0x8f, 0x59, 0x76, 0x79, 0x58, 0xc6, 0x36, 0x12, 0xd9, 0x14, 0x7e, 0xa6, 0xf0, 0xb8, 0x65, 0x55, 0xbb, 0xe3, 0xc2, 0x93, 0x96, 0x44, 0x63, 0x56, 0x28, 0x4c, 0x5a, 0x62, 0xad, 0x9e, 0x65, 0x90, 0x15, 0x8b, 0xf4, 0x26, 0x77, 0x80, 0x7a, 0x62, 0x34, 0x6a, 0x5f, 0xa1, 0x2a, 0x76, 0xd0, 0xec, 0x7d, 0xa7, 0x88};

void setup() {

}

void loop() {

  // custom created samples
  voice.say(sample1);
  voice.say(sample2);

  // VM61002 ROM (clock vocabulary, female US voice)
  voice.say(spc_GOOD);
  voice.say(spc_MORNING);
  voice.say(spc_THE);
  voice.say(spc_TIME);
  voice.say(spc_IS);
  voice.say(spc_THREE);
  voice.say(spc_OCLOCK);
  voice.say(spc_A_M_);
  delay(500);

  // Acorn computer speech synthesizer add on
  voice.say(spa_CASSETTE);
  voice.say(spa_DATA);
  voice.say(spa_ERROR);
  voice.say(spa_TONE1);
  voice.say(spa_TONE2);
  delay(500);

  // VM61002/3/4/5 ROMs, male US voice
  voice.say(sp2_DANGER);
  voice.say(sp2_DANGER);
  voice.say(sp2_RED);
  voice.say(sp2_ALERT);

  voice.say(sp5_INSTRUMENTS);
  voice.say(sp5_BREAKING);
  voice.say(sp5_DOWN);

  voice.say(sp3_VISIBILITY);
  voice.say(sp3_OBSCURED);

  voice.say(sp2_REPAIR);
  voice.say(sp2_MACHINE);
  voice.say(sp2_CHECK);

  voice.say(sp2_TEN);
  voice.say(sp2_MICRO);
  voice.say(sp2_FARAD);

  voice.say(sp2_FOUR);
  voice.say(sp2_KILO);
  voice.say(sp2_OHMS);

  voice.say(sp2_TWELVE);
  voice.say(sp2_MILLI);
  voice.say(sp2_HENRY);

  delay(500);

}
